<?xml version="1.0" standalone="no"?>
<!-- Generator: SVG Circus (http://svgcircus.com) -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg id="SVG-Circus-f50ce466-3bc7-e18c-3eb1-823196740bca" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
<polygon id="actor_4" points="59.00,43.00 50.00,52.00 59.00,61.00 68.00,52.00" opacity="1" fill="rgba(171,188,255,1)" fill-opacity="1" stroke="rgba(171,188,255,1)" stroke-width="1" stroke-opacity="1" stroke-dasharray=""></polygon>
<polygon id="actor_3" points="50.00,52.00 41.00,61.00 50.00,70.00 59.00,61.00" opacity="1" fill="rgba(171,188,255,1)" fill-opacity="1" stroke="rgba(171,188,255,1)" stroke-width="1" stroke-opacity="1" stroke-dasharray=""></polygon>
<polygon id="actor_2" points="50.00,34.00 41.00,43.00 50.00,52.00 59.00,43.00" opacity="1" fill="rgba(171,188,255,1)" fill-opacity="1" stroke="rgba(171,188,255,1)" stroke-width="1" stroke-opacity="1" stroke-dasharray=""></polygon>
<polygon id="actor_1" points="41.00,43.00 32.00,52.00 41.00,61.00 50.00,52.00" opacity="1" fill="rgba(171,188,255,1)" fill-opacity="1" stroke="rgba(171,188,255,1)" stroke-width="1" stroke-opacity="1" stroke-dasharray=""></polygon>
<script type="text/ecmascript">
<![CDATA[(function() {
    var actors = {};
    actors.actor_1 = {
        node: document.getElementById("SVG-Circus-f50ce466-3bc7-e18c-3eb1-823196740bca").getElementById("actor_1"),
        type: "polygon",
        cx: 41,
        cy: 52,
        dx: 18,
        dy: 23,
        opacity: 1
    };
    actors.actor_2 = {
        node: document.getElementById("SVG-Circus-f50ce466-3bc7-e18c-3eb1-823196740bca").getElementById("actor_2"),
        type: "polygon",
        cx: 50,
        cy: 43,
        dx: 18,
        dy: 23,
        opacity: 1
    };
    actors.actor_3 = {
        node: document.getElementById("SVG-Circus-f50ce466-3bc7-e18c-3eb1-823196740bca").getElementById("actor_3"),
        type: "polygon",
        cx: 50,
        cy: 61,
        dx: 18,
        dy: 23,
        opacity: 1
    };
    actors.actor_4 = {
        node: document.getElementById("SVG-Circus-f50ce466-3bc7-e18c-3eb1-823196740bca").getElementById("actor_4"),
        type: "polygon",
        cx: 59,
        cy: 52,
        dx: 18,
        dy: 23,
        opacity: 1
    };
    var tricks = {};
    tricks.trick_1 = (function(t, a) {
        a = (function(n) {
            return n
        })(a) % 1, a = a * 1 % 1, a = 0 > a ? 1 + a : a;
        var M = a * 1 * 360 * Math.PI / 180,
            i = t._tMatrix,
            _ = Math.cos(M),
            c = Math.sin(M),
            x = -Math.sin(M),
            s = Math.cos(M),
            h = -t.cx * Math.cos(M) + t.cy * Math.sin(M) + t.cx,
            n = -t.cx * Math.sin(M) - t.cy * Math.cos(M) + t.cy,
            r = i[0] * _ + i[2] * c,
            o = i[1] * _ + i[3] * c,
            y = i[0] * x + i[2] * s,
            f = i[1] * x + i[3] * s,
            d = i[0] * h + i[2] * n + i[4],
            e = i[1] * h + i[3] * n + i[5];
        t._tMatrix[0] = r, t._tMatrix[1] = o, t._tMatrix[2] = y, t._tMatrix[3] = f, t._tMatrix[4] = d, t._tMatrix[5] = e
    });
    tricks.trick_4 = (function(t, a) {
        a = (function(n) {
            return n
        })(a) % 1, a = a * 1 % 1, a = 0 > a ? 1 + a : a;
        var M = a * -1 * 360 * Math.PI / 180,
            i = t._tMatrix,
            _ = Math.cos(M),
            c = Math.sin(M),
            x = -Math.sin(M),
            s = Math.cos(M),
            h = -t.cx * Math.cos(M) + t.cy * Math.sin(M) + t.cx,
            n = -t.cx * Math.sin(M) - t.cy * Math.cos(M) + t.cy,
            r = i[0] * _ + i[2] * c,
            o = i[1] * _ + i[3] * c,
            y = i[0] * x + i[2] * s,
            f = i[1] * x + i[3] * s,
            d = i[0] * h + i[2] * n + i[4],
            e = i[1] * h + i[3] * n + i[5];
        t._tMatrix[0] = r, t._tMatrix[1] = o, t._tMatrix[2] = y, t._tMatrix[3] = f, t._tMatrix[4] = d, t._tMatrix[5] = e
    });
    tricks.trick_2 = (function(_, a) {
        a = (function(n) {
            return .5 > n ? 2 * n * n : -1 + (4 - 2 * n) * n
        })(a) % 1, a = a * 1 % 1, a = 0 > a ? 1 + a : a;
        var t, n;.5 > a ? (t = 2 * a * 15 * Math.cos(180 * Math.PI / 180), n = 2 * -a * 15 * Math.sin(180 * Math.PI / 180)) : (t = 2 * (1 - a) * 15 * Math.cos(180 * Math.PI / 180), n = 2 * -(1 - a) * 15 * Math.sin(180 * Math.PI / 180)), _._tMatrix[4] += t, _._tMatrix[5] += n
    });
    tricks.trick_3 = (function(_, a) {
        a = (function(n) {
            return .5 > n ? 2 * n * n : -1 + (4 - 2 * n) * n
        })(a) % 1, a = a * 1 % 1, a = 0 > a ? 1 + a : a;
        var t, n;.5 > a ? (t = 2 * a * 15 * Math.cos(0 * Math.PI / 180), n = 2 * -a * 15 * Math.sin(0 * Math.PI / 180)) : (t = 2 * (1 - a) * 15 * Math.cos(0 * Math.PI / 180), n = 2 * -(1 - a) * 15 * Math.sin(0 * Math.PI / 180)), _._tMatrix[4] += t, _._tMatrix[5] += n
    });
    tricks.trick_5 = (function(_, a) {
        a = (function(n) {
            return .5 > n ? 2 * n * n : -1 + (4 - 2 * n) * n
        })(a) % 1, a = a * 1 % 1, a = 0 > a ? 1 + a : a;
        var t, n;.5 > a ? (t = 2 * a * 15 * Math.cos(90 * Math.PI / 180), n = 2 * -a * 15 * Math.sin(90 * Math.PI / 180)) : (t = 2 * (1 - a) * 15 * Math.cos(90 * Math.PI / 180), n = 2 * -(1 - a) * 15 * Math.sin(90 * Math.PI / 180)), _._tMatrix[4] += t, _._tMatrix[5] += n
    });
    tricks.trick_6 = (function(_, a) {
        a = (function(n) {
            return .5 > n ? 2 * n * n : -1 + (4 - 2 * n) * n
        })(a) % 1, a = a * 1 % 1, a = 0 > a ? 1 + a : a;
        var t, n;.5 > a ? (t = 2 * a * 15 * Math.cos(260 * Math.PI / 180), n = 2 * -a * 15 * Math.sin(260 * Math.PI / 180)) : (t = 2 * (1 - a) * 15 * Math.cos(260 * Math.PI / 180), n = 2 * -(1 - a) * 15 * Math.sin(260 * Math.PI / 180)), _._tMatrix[4] += t, _._tMatrix[5] += n
    });
    var scenarios = {};
    scenarios.scenario_1 = {
        actors: ["actor_1"],
        tricks: [{
            trick: "trick_1",
            start: 0.20,
            end: 0.8
        }, {
            trick: "trick_2",
            start: 0,
            end: 1
        }],
        startAfter: 0,
        duration: 1500,
        actorDelay: 0,
        repeat: 0,
        repeatDelay: 0
    };
    scenarios.scenario_2 = {
        actors: ["actor_2"],
        tricks: [{
            trick: "trick_1",
            start: 0.2,
            end: 0.8
        }, {
            trick: "trick_5",
            start: 0,
            end: 1
        }],
        startAfter: 0,
        duration: 1500,
        actorDelay: 0,
        repeat: 0,
        repeatDelay: 0
    };
    scenarios.scenario_3 = {
        actors: ["actor_3"],
        tricks: [{
            trick: "trick_1",
            start: 0.2,
            end: 0.8
        }, {
            trick: "trick_6",
            start: 0,
            end: 1
        }],
        startAfter: 0,
        duration: 1500,
        actorDelay: 0,
        repeat: 0,
        repeatDelay: 0
    };
    scenarios.scenario_4 = {
        actors: ["actor_4"],
        tricks: [{
            trick: "trick_1",
            start: 0.2,
            end: 0.8
        }, {
            trick: "trick_3",
            start: 0,
            end: 1
        }],
        startAfter: 0,
        duration: 1500,
        actorDelay: 0,
        repeat: 0,
        repeatDelay: 0
    };
    var _reqAnimFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.oRequestAnimationFrame,
        fnTick = function(t) {
            var r, a, i, e, n, o, s, c, m, f, d, k, w;
            for (c in actors) actors[c]._tMatrix = [1, 0, 0, 1, 0, 0];
            for (s in scenarios)
                for (o = scenarios[s], m = t - o.startAfter, r = 0, a = o.actors.length; a > r; r++) {
                    if (i = actors[o.actors[r]], i && i.node && i._tMatrix)
                        for (f = 0, m >= 0 && (d = o.duration + o.repeatDelay, o.repeat > 0 && m > d * o.repeat && (f = 1), f += m % d / o.duration), e = 0, n = o.tricks.length; n > e; e++) k = o.tricks[e], w = (f - k.start) * (1 / (k.end - k.start)), tricks[k.trick] && tricks[k.trick](i, Math.max(0, Math.min(1, w)));
                    m -= o.actorDelay
                }
            for (c in actors) i = actors[c], i && i.node && i._tMatrix && i.node.setAttribute("transform", "matrix(" + i._tMatrix.join() + ")");
            _reqAnimFrame(fnTick)
        };
    _reqAnimFrame(fnTick);
})()]]>
</script>
</svg>